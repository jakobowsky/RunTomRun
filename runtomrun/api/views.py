import requests
from pprint import pprint

from django.shortcuts import render
from django.http import JsonResponse

from routing.routing import check
from runtomrun.settings import TOMTOMKEY


def get_points():
    return [[(52.43220162457221, 16.950054), (52.4319430718405, 16.954482471603306), (52.43117676723544, 16.958750735895833), (52.429930432198596, 16.962704397506805), (52.42824915048351, 16.966200471780006), (52.42619373326726, 16.969112565369493), (52.423838514784165, 16.971335449587315), (52.421268659084916, 16.97278886047431), (52.41857707620975, 16.973420388710316), (52.415861060060685, 16.97320735650468), (52.41321877007748, 16.972157616119247), (52.41074568414486, 16.970309244191203), (52.40853115083773, 16.967729146036433), (52.40665516517471, 16.964510623167076), (52.40518548368938, 16.960769993987263), (52.40417518218642, 16.956642390819756), (52.40366074349961, 16.952276885010168), (52.403660743499614, 16.947831114989835), (52.40417518218642, 16.943465609180244), (52.40518548368939, 16.93933800601274), (52.406655165174705, 16.935597376832934), (52.40853115083773, 16.93237885396357), (52.41074568414486, 16.9297987558088), (52.41321877007748, 16.92795038388075), (52.415861060060685, 16.926900643495323), (52.41857707620975, 16.926687611289687), (52.42126865908492, 16.927319139525693), (52.423838514784165, 16.92877255041268), (52.42619373326727, 16.93099543463051), (52.42824915048351, 16.933907528219997), (52.429930432198596, 16.937403602493198), (52.43117676723545, 16.941357264104163), (52.43194307184051, 16.945625528396697)], [(52.417896517035416, 16.973438959271796), (52.417637963717254, 16.977865997682294), (52.416871657369455, 16.9821328807079), (52.415625319483496, 16.986085263008825), (52.41394403389623, 16.989580206241147), (52.41188861190121, 16.992491357967953), (52.40953338788158, 16.994713523524197), (52.40696352606727, 16.99616646486047), (52.404271936704625, 16.996797789526074), (52.40155591392335, 16.996584826964334), (52.39891361740527, 16.995535426791886), (52.396440525282344, 16.993687653235416), (52.39422598637149, 16.991108389900013), (52.392349995916575, 16.98789090808333), (52.39088031064848, 16.9841514885694), (52.38987000653051, 16.98002522001398), (52.389355566507575, 16.975661125619414), (52.389355566507575, 16.971216792924178), (52.38987000653051, 16.96685269852961), (52.39088031064848, 16.9627264299742), (52.39234999591657, 16.958987010460262), (52.39422598637148, 16.955769528643582), (52.39644052528235, 16.953190265308177), (52.39891361740527, 16.95134249175171), (52.40155591392335, 16.95029309157926), (52.404271936704625, 16.95008012901752), (52.40696352606727, 16.950711453683123), (52.40953338788158, 16.952164395019395), (52.41188861190121, 16.954386560575642), (52.41394403389623, 16.957297712302445), (52.41562531948349, 16.960792655534767), (52.41687165736946, 16.964745037835687), (52.41763796371726, 16.9690119208613)], [(52.40359599999999, 16.950054), (52.40333744609546, 16.954479606882952), (52.402571138005136, 16.95874511024653), (52.40132479727046, 16.96269621472377), (52.399643507811554, 16.966190028229214), (52.397588081038506, 16.96910023918745), (52.39523285148326, 16.971321686916816), (52.392662983554914, 16.972774159247578), (52.38997138770596, 16.973405280578945), (52.387255358293764, 16.973192387579864), (52.3846130552421, 16.972143327224874), (52.38213995693018, 16.970296151344645), (52.37992541241678, 16.9677177218587), (52.378049417171056, 16.964501279885322), (52.37657972812108, 16.960763068632133), (52.375569421388725, 16.956638133138632), (52.375054980029994, 16.95227544851977), (52.375054980029994, 16.947832551480232), (52.375569421388725, 16.943469866861367), (52.37657972812108, 16.939344931367867), (52.37804941717106, 16.935606720114677), (52.379925412416775, 16.9323902781413), (52.38213995693019, 16.92981184865536), (52.384613055242106, 16.92796467277513), (52.38725535829377, 16.92691561242014), (52.38997138770596, 16.92670271942106), (52.392662983554914, 16.92733384075242), (52.39523285148326, 16.928786313083187), (52.39758808103852, 16.931007760812545), (52.39964350781156, 16.933917971770793), (52.40132479727046, 16.937411785276236), (52.40257113800514, 16.94136288975347), (52.40333744609546, 16.94562839311705)], [(52.417896517035416, 16.926669040728207), (52.417637963717254, 16.931096079138705), (52.416871657369455, 16.935362962164312), (52.415625319483496, 16.939315344465236), (52.41394403389623, 16.942810287697558), (52.41188861190121, 16.945721439424364), (52.40953338788158, 16.94794360498061), (52.40696352606727, 16.94939654631688), (52.404271936704625, 16.950027870982485), (52.40155591392335, 16.949814908420745), (52.39891361740527, 16.948765508248297), (52.396440525282344, 16.946917734691826), (52.39422598637149, 16.944338471356424), (52.392349995916575, 16.94112098953974), (52.39088031064848, 16.93738157002581), (52.38987000653051, 16.933255301470393), (52.389355566507575, 16.928891207075825), (52.389355566507575, 16.92444687438059), (52.38987000653051, 16.92008277998602), (52.39088031064848, 16.91595651143061), (52.39234999591657, 16.912217091916673), (52.39422598637148, 16.908999610099993), (52.39644052528235, 16.906420346764587), (52.39891361740527, 16.90457257320812), (52.40155591392335, 16.90352317303567), (52.404271936704625, 16.90331021047393), (52.40696352606727, 16.903941535139534), (52.40953338788158, 16.905394476475806), (52.41188861190121, 16.907616642032053), (52.41394403389623, 16.910527793758856), (52.41562531948349, 16.91402273699118), (52.41687165736946, 16.917975119292098), (52.41763796371726, 16.92224200231771)]]

def format_points(route):
    query = ''
    for counter, point in enumerate(route, 1):
        query += f'{round(point[0], 5)},{round(point[1], 5)}'
        if counter < len(route):
            query+=':'
    print(query)
    return query

def get_tomtom_route(query):
    # request = requests.get(
    #     f'https://api.tomtom.com/routing/1/calculateRoute/{query}/json?avoid=unpavedRoads&key={TOMTOMKEY}'
    # )
    # #pprint(request.json()['routes'][0]['legs'][0]['points'])
    # pprint(request.json())
    pass

def get_tomtom():
    for route in get_points()[:1]:
        query = format_points(route)
        get_tomtom_route(query)
    # request = requests.get(
    #     f'https://api.tomtom.com/routing/1/calculateRoute/52.50931,13.42936:52.50274,13.43872:52.5045,13.70/json?avoid=unpavedRoads&key={TOMTOMKEY}'
    # )
    # pprint(request.json()['routes'][0]['legs'][0]['points'])
    # pprint(request.json())


def index(request, x, y, radius, length):
    # print(get_points())
    # print(TOMTOMKEY)
    get_tomtom()
    json_response = {
        'routing': f'{check(2)}',
        'x': x,
        'y': y,
        'radius': radius,
        'length': length,
    }
    return JsonResponse(json_response)
